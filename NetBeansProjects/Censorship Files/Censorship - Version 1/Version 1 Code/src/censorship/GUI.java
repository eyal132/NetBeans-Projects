/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package censorship;

import java.io.*;



/**
 *
 * @author Eyal Blumental Erez
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jFileChooser1 = new javax.swing.JFileChooser();
        messageCensorship = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextBox = new javax.swing.JTextArea();
        censoredOutput = new javax.swing.JLabel();
        cleanFile = new javax.swing.JButton();
        censorRadio = new javax.swing.JRadioButton();
        xRadio = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        messageCensorship.setFont(new java.awt.Font("FrankRuehl", 1, 24)); // NOI18N
        messageCensorship.setText("Message Censorship");

        outputTextBox.setColumns(20);
        outputTextBox.setRows(5);
        jScrollPane1.setViewportView(outputTextBox);

        censoredOutput.setFont(new java.awt.Font("FrankRuehl", 0, 18)); // NOI18N
        censoredOutput.setText("Censored Output");

        cleanFile.setFont(new java.awt.Font("FrankRuehl", 0, 13)); // NOI18N
        cleanFile.setText("Clean File");
        cleanFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanFileActionPerformed(evt);
            }
        });

        buttonGroup1.add(censorRadio);
        censorRadio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        censorRadio.setText("Censor with \"Censored\"");
        censorRadio.setActionCommand("");
        censorRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                censorRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(xRadio);
        xRadio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xRadio.setSelected(true);
        xRadio.setText("Censor with *");
        xRadio.setActionCommand("");
        xRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(xRadio)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(censorRadio)
                                        .addGap(43, 43, 43)
                                        .addComponent(cleanFile))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addComponent(censoredOutput)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 140, Short.MAX_VALUE)
                .addComponent(messageCensorship)
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(messageCensorship)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(xRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cleanFile, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(censorRadio))
                .addGap(18, 18, 18)
                .addComponent(censoredOutput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void censorRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_censorRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_censorRadioActionPerformed

    private void xRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xRadioActionPerformed

    private void cleanFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanFileActionPerformed
      //TODO add your handling code here:                                  
    }//GEN-LAST:event_cleanFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton censorRadio;
    private javax.swing.JLabel censoredOutput;
    private javax.swing.JButton cleanFile;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel messageCensorship;
    private javax.swing.JTextArea outputTextBox;
    private javax.swing.JRadioButton xRadio;
    // End of variables declaration//GEN-END:variables
}
