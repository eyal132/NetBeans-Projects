/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doorgame;

/**
 *
 * @author Eyal Blumental Erez
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    public static final String[] doors = {" ", " ", " "};
    
    public double randomNum = 0;
    
    public boolean secondChoice = false;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        doorTwo = new javax.swing.JTextField();
        doorOne = new javax.swing.JTextField();
        doorThree = new javax.swing.JTextField();
        setDoor = new javax.swing.JButton();
        setDoorOne = new javax.swing.JButton();
        setDoorTwo = new javax.swing.JButton();
        setDoorThree = new javax.swing.JButton();
        gameStart = new javax.swing.JButton();
        doorTwoPick = new javax.swing.JButton();
        doorThreePick = new javax.swing.JButton();
        doorOnePick = new javax.swing.JButton();
        playAgain = new javax.swing.JButton();
        answerText = new javax.swing.JLabel();
        chooseDoorText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        doorTwo.setEditable(false);
        doorTwo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        doorTwo.setText("N");

        doorOne.setEditable(false);
        doorOne.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        doorOne.setText("Y");
        doorOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doorOneActionPerformed(evt);
            }
        });

        doorThree.setEditable(false);
        doorThree.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        doorThree.setText("N");

        setDoor.setText("Set Door");
        setDoor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDoorActionPerformed(evt);
            }
        });

        setDoorOne.setText("Pick Door");
        setDoorOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDoorOneActionPerformed(evt);
            }
        });

        setDoorTwo.setText("Pick Door");
        setDoorTwo.setActionCommand("");
        setDoorTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDoorTwoActionPerformed(evt);
            }
        });

        setDoorThree.setText("Pick Door");
        setDoorThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDoorThreeActionPerformed(evt);
            }
        });

        gameStart.setText("Start Game");
        gameStart.setEnabled(false);
        gameStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameStartActionPerformed(evt);
            }
        });

        doorTwoPick.setText("Door 2");
        doorTwoPick.setEnabled(false);
        doorTwoPick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doorTwoPickActionPerformed(evt);
            }
        });

        doorThreePick.setText("Door 3");
        doorThreePick.setEnabled(false);
        doorThreePick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doorThreePickActionPerformed(evt);
            }
        });

        doorOnePick.setText("Door 1");
        doorOnePick.setEnabled(false);
        doorOnePick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doorOnePickActionPerformed(evt);
            }
        });

        playAgain.setText("Play Again");
        playAgain.setEnabled(false);
        playAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainActionPerformed(evt);
            }
        });

        answerText.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N

        chooseDoorText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(setDoorOne)
                    .addComponent(doorOnePick))
                .addGap(225, 225, 225)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(doorTwoPick)
                    .addComponent(setDoorTwo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doorThreePick, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(setDoorThree, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doorOne, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(doorTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(doorThree, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(gameStart, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101)
                                .addComponent(answerText)
                                .addGap(289, 289, 289))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chooseDoorText)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(setDoor, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(350, 350, 350))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doorTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doorThree, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doorOne, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setDoorOne)
                    .addComponent(setDoorTwo)
                    .addComponent(setDoorThree))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doorTwoPick, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doorThreePick, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doorOnePick, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chooseDoorText)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(setDoor, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(answerText)
                        .addComponent(playAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(gameStart, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setDoorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDoorActionPerformed
    
    doorOne.setVisible(false);
    
    doorTwo.setVisible(false);
    
    doorThree.setVisible(false);
    
    setDoorOne.setVisible(false);
    
    setDoorTwo.setVisible(false);
    
    setDoorThree.setVisible(false);
        
    String firstDoor = doorOne.getText();
    
    String secondDoor = doorTwo.getText();
    
    String thirdDoor = doorThree.getText();
    
    doors[0] = firstDoor;
    
    doors[1] = secondDoor;
    
    doors[2] = thirdDoor;
    
    gameStart.setEnabled(true);
    
    gameStart.setVisible(true);
    
    setDoor.setVisible(false);
    
    doorOnePick.setVisible(false);
    
    doorTwoPick.setVisible(false);
    
    doorThreePick.setVisible(false);
    
    playAgain.setVisible(false);
    
    }//GEN-LAST:event_setDoorActionPerformed

    private void setDoorOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDoorOneActionPerformed
      doorOne.setText("Y");
      
      doorTwo.setText("N");
      
      doorThree.setText("N");
    }//GEN-LAST:event_setDoorOneActionPerformed

    private void setDoorTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDoorTwoActionPerformed
      doorOne.setText("N");
      
      doorTwo.setText("Y");
      
      doorThree.setText("N");
    }//GEN-LAST:event_setDoorTwoActionPerformed

    private void setDoorThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDoorThreeActionPerformed
      doorOne.setText("N");
      
      doorTwo.setText("N");
      
      doorThree.setText("Y");
    }//GEN-LAST:event_setDoorThreeActionPerformed

    private void gameStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameStartActionPerformed
     doorOnePick.setEnabled(true);
     
     doorTwoPick.setEnabled(true);
     
     doorThreePick.setEnabled(true);
     
     doorOnePick.setVisible(true);
     
     doorTwoPick.setVisible(true);
     
     doorThreePick.setVisible(true);
     
     gameStart.setVisible(false);
    }//GEN-LAST:event_gameStartActionPerformed

    private void doorOnePickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doorOnePickActionPerformed
   
        if(secondChoice == true) {
       
        if (doors[0].equals("Y")) {
         
         System.out.println("Yay!!");
         
         answerText.setText("Correct!! :D");
         
         answerText.setVisible(true);
         
         playAgain.setEnabled(true);
         
         playAgain.setVisible(true);
         
     } else {
         
         System.out.println(":( Very Sad"); 
         
         playAgain.setEnabled(true);
         
         playAgain.setVisible(true);
         
         answerText.setText("Wrong! :(");
         
         answerText.setVisible(true);
         
     }
     
          doorOnePick.setEnabled(false);
     
     doorTwoPick.setEnabled(false);
     
     doorThreePick.setEnabled(false);
     
     chooseDoorText.setVisible(false);
     
   } else { 
            
 if (doors[1].equals("N") || doors[2].equals("N")) {
                
                if (doors[1].equals("N") && doors[2].equals("N")) {
                    
                                              randomNum = Math.random();
                          
                          System.out.println(randomNum);
         
         if (randomNum >= 0.5) {
             
              doorThreePick.setVisible(false);
             
         } else {
             
              doorTwoPick.setVisible(false);

         }
                    
                } else if (doors[1].equals("N")) {
                    
                    doorTwoPick.setVisible(false);
                    
                } else if (doors[2].equals("N")) {
                    
                    doorThreePick.setVisible(false);
                    
                }
            }
         
 chooseDoorText.setVisible(true);
 
         chooseDoorText.setText("Pick to keep or swap doors...");
         
         secondChoice = true;
   }
    }//GEN-LAST:event_doorOnePickActionPerformed

    private void doorTwoPickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doorTwoPickActionPerformed
       
        if (secondChoice == true) {
            
        if (doors[1].equals("Y")) {
               
         System.out.println("Yay!!");
         
         answerText.setText("Correct!! :D");
         
         answerText.setVisible(true);
         
         playAgain.setEnabled(true);
         
         playAgain.setVisible(true);
         
     } else {
               
         System.out.println(":( Very Sad"); 
         
         playAgain.setEnabled(true);
         
         playAgain.setVisible(true);
         
         answerText.setText("Wrong! :(");
         
         answerText.setVisible(true);
         
     }
        
         doorOnePick.setEnabled(false);
     
     doorTwoPick.setEnabled(false);
     
     doorThreePick.setEnabled(false);
     
     chooseDoorText.setVisible(false);
     
    } else {
            
            if (doors[0].equals("N") || doors[2].equals("N")) {
                
                if (doors[0].equals("N") && doors[2].equals("N")) {
                    
                                              randomNum = Math.random();
                          
                          System.out.println(randomNum);
         
         if (randomNum >= 0.5) {
             
              doorThreePick.setVisible(false);
             
         } else {
             
              doorOnePick.setVisible(false);

         }
                    
                } else if (doors[0].equals("N")) {
                    
                    doorOnePick.setVisible(false);
                    
                } else if (doors[2].equals("N")) {
                    
                    doorThreePick.setVisible(false);
                    
                }
            }
         
            chooseDoorText.setVisible(true);
            
         chooseDoorText.setText("Pick to keep or swap doors...");
         
         secondChoice = true;
         
        }
    }//GEN-LAST:event_doorTwoPickActionPerformed

    private void doorThreePickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doorThreePickActionPerformed
        
        if (secondChoice == true) {
            
        if (doors[2].equals("Y")) {
                
         System.out.println("Yay!!");
         
         answerText.setText("Correct!! :D");
         
         answerText.setVisible(true);
                  
         playAgain.setEnabled(true);
         
         playAgain.setVisible(true);
         
     } else {
                
         System.out.println(":( Very Sad"); 
         
         playAgain.setEnabled(true);
         
         playAgain.setVisible(true);
         
         answerText.setText("Wrong! :(");
         
         answerText.setVisible(true);
     }
            
             doorOnePick.setEnabled(false);
     
     doorTwoPick.setEnabled(false);
     
     doorThreePick.setEnabled(false);
     
     chooseDoorText.setVisible(false);
     
        } else {
            
 if (doors[0].equals("N") || doors[1].equals("N")) {
                
                if (doors[0].equals("N") && doors[1].equals("N")) {
                    
                                              randomNum = Math.random();
                          
                          System.out.println(randomNum);
         
         if (randomNum >= 0.5) {
             
              doorTwoPick.setVisible(false);
             
         } else {
             
              doorOnePick.setVisible(false);

         }
                    
                } else if (doors[0].equals("N")) {
                    
                    doorOnePick.setVisible(false);
                    
                } else if (doors[1].equals("N")) {
                    
                    doorTwoPick.setVisible(false);
                    
                }
            }
 
 chooseDoorText.setVisible(true);
         
          chooseDoorText.setText("Pick to keep or swap doors...");
         
         secondChoice = true;
 
        }
        
    }//GEN-LAST:event_doorThreePickActionPerformed

    private void playAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainActionPerformed
       playAgain.setVisible(false);
    
    setDoor.setVisible(true);
    
    doorOne.setVisible(true);
    
    doorTwo.setVisible(true);
    
    doorThree.setVisible(true);
    
         doorOnePick.setVisible(false);
     
     doorTwoPick.setVisible(false);
     
     doorThreePick.setVisible(false);
     
         setDoorOne.setVisible(true);
    
    setDoorTwo.setVisible(true);
    
    setDoorThree.setVisible(true);
    
    answerText.setVisible(false);
    
    chooseDoorText.setText("");
    
    secondChoice = false;
       
    }//GEN-LAST:event_playAgainActionPerformed

    private void doorOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doorOneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doorOneActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
            
        });    
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answerText;
    private javax.swing.JLabel chooseDoorText;
    private javax.swing.JTextField doorOne;
    private javax.swing.JButton doorOnePick;
    private javax.swing.JTextField doorThree;
    private javax.swing.JButton doorThreePick;
    private javax.swing.JTextField doorTwo;
    private javax.swing.JButton doorTwoPick;
    private javax.swing.JButton gameStart;
    private javax.swing.JButton playAgain;
    private javax.swing.JButton setDoor;
    private javax.swing.JButton setDoorOne;
    private javax.swing.JButton setDoorThree;
    private javax.swing.JButton setDoorTwo;
    // End of variables declaration//GEN-END:variables
}
